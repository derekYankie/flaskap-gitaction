# Assignment: Build a Python Build Deployment Pipeline
# Date: 01/30/2023
# "Hey Siri, play Element by Demeanor by Pop Smoke "
# Author: derekYankie

# This workflow will publish a Flask webapp as an image to Docker Hub
# Using Github Actions
# steps represent a sequence of tasks that will be executed for a singular job

name: Python Build Deployment
# Track project changes and build a new image 
# when changes are committed to the repo
on:
  - push

# job-1 
jobs:
  files:
    name: Project files 📂 # label for job-1
    runs-on: ubuntu-latest
    
    # steps for job-2
    steps:
    - uses: actions/checkout@v3
    
    - name: Checkout 🛎️
      run: echo "Preparing list!"

    - name: List files 📝
      run: ls
  
  # job-2
  build:
    name: Build Python App 🐍 # label for job-2
    runs-on: ubuntu-latest
    needs: [files] # dependency 
    
    # steps for job-2
    steps:
    - uses: actions/checkout@v3

    - name: Checkout 🛎️
      run: echo "Preparing build!"
    
    - name: Install Python 🧰
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    
    - name: Install dependencies 🛠 
      run: |
        python -m pip install --upgrade pip
        pip install pip install Flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run Python Script 🐍
      run: python app.py
    
    - name: Job complete! ✅ 
      run: python -c "import sys; print(sys.version)"

  # job-3
  test:
    name: Test App 🧪 # label for job-3
    runs-on: ubuntu-latest
    needs: [files,build]

    # steps for job-3
    steps:
    - uses: actions/checkout@v3

    - name: Checkout 🛎️
      run: echo "Preparing test!"
    
    - name: Install Python 🧰
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    
    - name: Install dependencies 🛠 
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: List files 📝
      run: ls
    
    - name: Lint with flake8 🧬
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest 🧪 
      run: |
        pytest
    
    - name: Run Unit Tests 👩‍🔬
      run: |
        python test_app.py

  # job-4
  deploy:
    name: Deploy App to Docker 🚀 # label for job-4
    runs-on: ubuntu-latest
    needs: [files,build,test]

    # steps for job-4
    steps:
    - uses: actions/checkout@v3

    - name: Checkout 🛎️
      run: echo "Preparing deployment!"
    
    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      
    - name: Build Docker image 🐳
      run: docker build . --file Dockerfile --tag flask-github-actions-app:v1
    
    - name: List images  📝
      run: docker images 
    
    - name: Tag Docker image 🏷
      run: docker tag flask-github-actions-app:v1 ${{ secrets.DOCKER_USERNAME }}/flask-github-actions-app:v2
      
    - name: Push into Docker Hub 🚀
      run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-github-actions-app:v2
